plugins {
    alias(libs.plugins.android.application)
}

android {
    namespace 'com.example.opencvintegrate'
    compileSdk 36

    defaultConfig {
        applicationId "com.example.opencvintegrate"
        minSdk 24
        targetSdk 36
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // =============================================================
        //  1. ADD THIS BLOCK TO FIX THE NATIVE LIBRARY CRASH
        // =============================================================
        ndk {
            abiFilters 'arm64-v8a', 'armeabi-v7a'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // =============================================================
    //  2. I HAVE REMOVED THE OLD compileOptions BLOCK.
    //     It was forcing an outdated Java 11 version. Modern Android
    //     requires Java 17+, and removing this lets Gradle use
    //     the correct default.
    // =============================================================

    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
            version '3.22.1'
        }
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation libs.appcompat
    implementation libs.material
    implementation libs.constraintlayout
    testImplementation libs.junit
    def camerax_version = "1.3.1" // Use the latest stable version
    implementation "androidx.camera:camera-core:${camerax_version}"
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    implementation "androidx.camera:camera-view:${camerax_version}"
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core
    implementation project(':openCV')
}